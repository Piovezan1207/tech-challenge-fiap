apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.7
        name: mysql

        ports:
        - containerPort: 3306
          name: mysql
        envFrom:
        - secretRef:
            name: db-secret
        volumeMounts:
        - name: initsql-volume
          mountPath: /docker-entrypoint-initdb.d/
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
      - name: initsql-volume
        #kubectl create configmap db-init-config --from-file=init.sql=init.sql
        configMap:
          name: db-init-config 

---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
data:
  MYSQL_ROOT_PASSWORD: cGFzc3dvcmQ=
  MYSQL_DATABASE: bGFuY2hvbmV0ZV9kYg==
  MYSQL_USER: dXNlcg==
  MYSQL_PASSWORD: cGFzc3dvcmQ=
  
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: "/mnt/data"
    
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi